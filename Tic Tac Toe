<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tic-Tac-Toe with Celebration & Sad Sound</title>
  <style>
    body {
      margin: 0;
      font-family: sans-serif;
      background: #111;
      color: white;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
    }

    h1 {
      margin-bottom: 20px;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-gap: 10px;
    }

    .cell {
      width: 100px;
      height: 100px;
      font-size: 2.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      background: #222;
      color: white;
      border-radius: 10px;
      cursor: pointer;
      transition: background 0.3s;
    }

    .cell:hover {
      background: #333;
    }

    .cell.taken {
      pointer-events: none;
    }

    .overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0, 0, 0, 0.95);
      display: none;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      z-index: 1000;
      color: white;
      font-size: 3rem;
      font-weight: bold;
      text-align: center;
    }

    .overlay.show {
      display: flex;
    }

    button {
      margin-top: 20px;
      padding: 10px 20px;
      font-size: 1rem;
      border: none;
      border-radius: 8px;
      background: #ff5c5c;
      color: white;
      cursor: pointer;
    }

    button:hover {
      background: #ff1f1f;
    }

    .fireworks {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 2000;
    }

    .firework {
      position: absolute;
      width: 5px;
      height: 5px;
      background: yellow;
      border-radius: 50%;
      animation: explode 1s ease-out forwards;
    }

    @keyframes explode {
      0% {
        transform: translate(0, 0) scale(1);
        opacity: 1;
      }
      100% {
        transform: translate(var(--x), var(--y)) scale(0.5);
        opacity: 0;
      }
    }
  </style>
</head>
<body>

  <h1>Tic-Tac-Toe: You vs Computer</h1>
  <div class="board" id="board"></div>

  <div class="overlay" id="overlay">
    <div id="message"></div>
    <button onclick="resetGame()">Play Again</button>
  </div>

  <div class="fireworks" id="fireworks"></div>

  <!-- Sound effects -->
  <audio id="winSound" src="https://www.soundjay.com/human/applause-8.mp3"></audio>


  <script>
    const board = document.getElementById('board');
    const overlay = document.getElementById('overlay');
    const message = document.getElementById('message');
    const fireworks = document.getElementById('fireworks');
    const winSound = document.getElementById('winSound');
    const loseSound = document.getElementById('loseSound');

    let cells = [];
    let gameActive = true;

    function createBoard() {
      board.innerHTML = '';
      cells = [];
      for (let i = 0; i < 9; i++) {
        const cell = document.createElement('div');
        cell.classList.add('cell');
        cell.dataset.index = i;
        cell.addEventListener('click', handlePlayerMove);
        board.appendChild(cell);
        cells.push(cell);
      }
    }

    function handlePlayerMove(e) {
      if (!gameActive) return;
      const cell = e.target;
      if (cell.textContent) return;

      cell.textContent = 'X';
      cell.classList.add('taken');

      if (checkWinner('X')) {
        endGame("ðŸŽ‰ Congratulations! You Win!", 'win');
        return;
      }

      if (isDraw()) {
        endGame("It's a Draw!");
        return;
      }

      setTimeout(computerMove, 500);
    }

    function computerMove() {
      if (!gameActive) return;

      let emptyCells = cells.filter(cell => cell.textContent === '');
      if (emptyCells.length === 0) return;

      let randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];
      randomCell.textContent = 'O';
      randomCell.classList.add('taken');

      if (checkWinner('O')) {
        endGame(" You Lose! Try Again", 'lose');
        return;
      }

      if (isDraw()) {
        endGame("It's a Draw!");
      }
    }

    function checkWinner(player) {
      const wins = [
        [0,1,2],[3,4,5],[6,7,8],
        [0,3,6],[1,4,7],[2,5,8],
        [0,4,8],[2,4,6]
      ];
      return wins.some(comb =>
        comb.every(index => cells[index].textContent === player)
      );
    }

    function isDraw() {
      return cells.every(cell => cell.textContent);
    }

    function endGame(text, result) {
      gameActive = false;
      message.textContent = text;
      overlay.classList.add('show');

      if (result === 'win') {
        winSound.play();
        showFireworks();
      } else if (result === 'lose') {
        loseSound.play();
      }
    }

    function showFireworks() {
      for (let i = 0; i < 30; i++) {
        const spark = document.createElement('div');
        spark.className = 'firework';
        spark.style.left = `${Math.random() * 100}%`;
        spark.style.top = `${Math.random() * 100}%`;
        spark.style.setProperty('--x', `${(Math.random() - 0.5) * 200}px`);
        spark.style.setProperty('--y', `${(Math.random() - 0.5) * 200}px`);
        fireworks.appendChild(spark);
        setTimeout(() => spark.remove(), 1000);
      }
    }

    function resetGame() {
      createBoard();
      gameActive = true;
      overlay.classList.remove('show');
      fireworks.innerHTML = '';
    }

    // Initialize game
    createBoard();
  </script>

</body>
</html>
